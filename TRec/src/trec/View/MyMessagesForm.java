/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trec.View;

import java.util.ArrayList;
import javax.swing.JFrame;
import trec.Controller.UserController;
import trec.Model.User;

/**
 *
 * @author basic
 */
public class MyMessagesForm extends javax.swing.JFrame {
  private User current_user;
  private ArrayList<Integer> user_ids;
  /**
   * Creates new form MyMessagesForm
   */
  public MyMessagesForm() {
    initComponents();
    current_user = UserController.getInstance().getCurrentUser();
    home_menu_bar_adminhub.setVisible(current_user.isAdmin());
    try {
      user_ids = UserController.getInstance().getAllUserIDsThatSentMessagesToMe(current_user.getID());
      if(user_ids.isEmpty()) {
        // if empty, display no messages
        message_field.setText("There are currently no messages.");
      } else {
        // if not, get all users and fill users combo
        for(int id : user_ids) {
          users_combo_box.addItem(UserController.getInstance().getUserByUserID(id).getUsername());
        }
        // get first user on the list, and add subjects to combo
        User first_user = UserController.getInstance().getUserByUserID(user_ids.get(0));
        ArrayList<String> subjects = UserController.getInstance().getAllSubjectsFromUsersByUserID(first_user.getID(), current_user.getID());
        for(String subject : subjects) {
          subject_combo_box.addItem(subject);
        }
        // get first subject and fill message field
        message_field.setText(UserController.getInstance().getMessageBySubjectFromUser(current_user.getID(), first_user.getID(), subjects.get(0)));
      }
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    choose_country_label = new javax.swing.JLabel();
    users_combo_box = new javax.swing.JComboBox<>();
    choose_city_label = new javax.swing.JLabel();
    subject_combo_box = new javax.swing.JComboBox<>();
    choose_city_label1 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    message_field = new javax.swing.JTextPane();
    back_button = new javax.swing.JButton();
    adminhub_menu_bar = new javax.swing.JMenuBar();
    adminhub_menu_bar_logout = new javax.swing.JMenu();
    home_menu_bar_adminhub = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    choose_country_label.setText("User:");

    users_combo_box.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        users_combo_boxItemStateChanged(evt);
      }
    });

    choose_city_label.setText("Subject:");

    subject_combo_box.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        subject_combo_boxItemStateChanged(evt);
      }
    });

    choose_city_label1.setText("Message:");

    jScrollPane1.setViewportView(message_field);

    back_button.setText("Back");
    back_button.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        back_buttonMouseClicked(evt);
      }
    });

    adminhub_menu_bar_logout.setText("Logout");
    adminhub_menu_bar_logout.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        adminhub_menu_bar_logoutMouseClicked(evt);
      }
    });
    adminhub_menu_bar.add(adminhub_menu_bar_logout);

    home_menu_bar_adminhub.setText("AdminHub");
    home_menu_bar_adminhub.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        home_menu_bar_adminhubMouseClicked(evt);
      }
    });
    adminhub_menu_bar.add(home_menu_bar_adminhub);

    setJMenuBar(adminhub_menu_bar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(choose_city_label)
              .addComponent(choose_country_label))
            .addGap(31, 31, 31)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(subject_combo_box, 0, 316, Short.MAX_VALUE)
              .addComponent(users_combo_box, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
          .addComponent(back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(choose_city_label1)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(users_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(choose_country_label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(subject_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(choose_city_label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(choose_city_label1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(back_button)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void users_combo_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_users_combo_boxItemStateChanged
    // TODO add your handling code here:
    try {
      subject_combo_box.removeAllItems();
      User user = UserController.getInstance().getUserByUsername(users_combo_box.getSelectedItem().toString());
      ArrayList<String> subjects = UserController.getInstance().getAllSubjectsFromUsersByUserID(user.getID(), current_user.getID());
      for(String subject : subjects) {
        subject_combo_box.addItem(subject);
      }
      // get first subject and fill message field
      message_field.setText(UserController.getInstance().getMessageBySubjectFromUser(current_user.getID(), user.getID(), subjects.get(0)));
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }//GEN-LAST:event_users_combo_boxItemStateChanged

  private void subject_combo_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subject_combo_boxItemStateChanged
    // TODO add your handling code here:
    try {
      User user = UserController.getInstance().getUserByUsername(users_combo_box.getSelectedItem().toString());
      String message = UserController.getInstance().getMessageBySubjectFromUser(current_user.getID(), user.getID(), subject_combo_box.getSelectedItem().toString());
      message_field.setText(message);
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }//GEN-LAST:event_subject_combo_boxItemStateChanged

  private void adminhub_menu_bar_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminhub_menu_bar_logoutMouseClicked
    // TODO add your handling code here:
    LoginForm login_form = new LoginForm();
    login_form.setVisible(true);
    login_form.pack();
    login_form.setLocationRelativeTo(null);
    login_form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_adminhub_menu_bar_logoutMouseClicked

  private void back_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_buttonMouseClicked
    // TODO add your handling code here:
    AppHomeForm form = new AppHomeForm();
    form.setVisible(true);
    form.pack();
    form.setLocationRelativeTo(null);
    form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_back_buttonMouseClicked

  private void home_menu_bar_adminhubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_menu_bar_adminhubMouseClicked
    // TODO add your handling code here:
    AdminHub admin_hub = new AdminHub();
    admin_hub.setVisible(true);
    admin_hub.pack();
    admin_hub.setLocationRelativeTo(null);
    admin_hub.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_home_menu_bar_adminhubMouseClicked

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MyMessagesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MyMessagesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MyMessagesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MyMessagesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new MyMessagesForm().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuBar adminhub_menu_bar;
  private javax.swing.JMenu adminhub_menu_bar_logout;
  private javax.swing.JButton back_button;
  private javax.swing.JLabel choose_city_label;
  private javax.swing.JLabel choose_city_label1;
  private javax.swing.JLabel choose_country_label;
  private javax.swing.JMenu home_menu_bar_adminhub;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTextPane message_field;
  private javax.swing.JComboBox<String> subject_combo_box;
  private javax.swing.JComboBox<String> users_combo_box;
  // End of variables declaration//GEN-END:variables
}
