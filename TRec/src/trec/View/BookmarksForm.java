/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package trec.View;

import java.util.ArrayList;
import javax.swing.JFrame;
import trec.Controller.UserController;
import trec.Model.Accommodation;
import trec.Model.Destination;

/**
 *
 * @author basic
 */
public class BookmarksForm extends javax.swing.JFrame {
    private ArrayList<Destination> dest_list;
    private ArrayList<Accommodation> acc_list;
    /** Creates new form BookmarksForm */
    public BookmarksForm() {
      initComponents();
      menu_bar_adminhub.setVisible(UserController.getInstance().getCurrentUser().isAdmin());
      bookmark_type_combo_box.addItem("Destination");
      bookmark_type_combo_box.addItem("Accommodation");
      dest_list = new ArrayList<>();
      acc_list = new ArrayList<>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    choose_bookmark_type_label = new javax.swing.JLabel();
    bookmark_type_combo_box = new javax.swing.JComboBox<>();
    choose_bookmark_name_label = new javax.swing.JLabel();
    bookmark_name_combo_box = new javax.swing.JComboBox<>();
    jScrollPane1 = new javax.swing.JScrollPane();
    desc_field = new javax.swing.JTextPane();
    back_button = new javax.swing.JButton();
    bookmarks_menu_bar = new javax.swing.JMenuBar();
    menu_bar_logout = new javax.swing.JMenu();
    menu_bar_adminhub = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    choose_bookmark_type_label.setText("Choose the type of bookmark:");

    bookmark_type_combo_box.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        bookmark_type_combo_boxItemStateChanged(evt);
      }
    });

    choose_bookmark_name_label.setText("Choose a bookmark name:");

    bookmark_name_combo_box.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        bookmark_name_combo_boxItemStateChanged(evt);
      }
    });

    desc_field.setEditable(false);
    jScrollPane1.setViewportView(desc_field);

    back_button.setText("Back");
    back_button.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        back_buttonMouseClicked(evt);
      }
    });

    menu_bar_logout.setText("Logout");
    menu_bar_logout.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        menu_bar_logoutMouseClicked(evt);
      }
    });
    bookmarks_menu_bar.add(menu_bar_logout);

    menu_bar_adminhub.setText("AdminHub");
    menu_bar_adminhub.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        menu_bar_adminhubMouseClicked(evt);
      }
    });
    bookmarks_menu_bar.add(menu_bar_adminhub);

    setJMenuBar(bookmarks_menu_bar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(22, 22, 22)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(choose_bookmark_type_label)
              .addComponent(choose_bookmark_name_label))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(bookmark_name_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(bookmark_type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addComponent(back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(20, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(22, 22, 22)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(choose_bookmark_type_label)
          .addComponent(bookmark_type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(choose_bookmark_name_label)
          .addComponent(bookmark_name_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(back_button)
        .addContainerGap(20, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void bookmark_type_combo_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bookmark_type_combo_boxItemStateChanged
    // TODO add your handling code here:
    String type = bookmark_type_combo_box.getSelectedItem().toString();
    bookmark_name_combo_box.removeAllItems();
    desc_field.setText("No bookmars yet.");
    if(type.equals("Accommodation")) {
      acc_list = UserController.getInstance().getAccommodationBookmarks(
        UserController.getInstance().getCurrentUser());
      if(acc_list != null) {
        acc_list.forEach((acc) -> {
          bookmark_name_combo_box.addItem(acc.getName());
        });
        desc_field.setText(acc_list.get(0).getDescription());
      }
    } else if(type.equals("Destination")) {
      dest_list = UserController.getInstance().getDestinationBookmarks(
        UserController.getInstance().getCurrentUser());
      if(dest_list != null) {
        dest_list.forEach((dest) -> {
          bookmark_name_combo_box.addItem(dest.getName());
        });
        desc_field.setText(dest_list.get(0).getDescription());
      }
    }
  }//GEN-LAST:event_bookmark_type_combo_boxItemStateChanged

  private void bookmark_name_combo_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bookmark_name_combo_boxItemStateChanged
    // TODO add your handling code here:
    String type = bookmark_type_combo_box.getSelectedItem().toString();
    int index = bookmark_name_combo_box.getSelectedIndex();
    desc_field.setText("");
    if(index >= 0) {
      if(type.equals("Accommodation")) {
        if(acc_list.isEmpty()) {
          desc_field.setText("No bookmarks yet.");
        } else {
          desc_field.setText(acc_list.get(index).getDescription());
        }
      } else if(type.equals("Destination")) {
        if(dest_list.isEmpty()) {
          desc_field.setText("No bookmarks yet.");
        } else {
          desc_field.setText(dest_list.get(index).getDescription());
        }
      }
    } else {
      desc_field.setText("No bookmarks yet.");
    }
  }//GEN-LAST:event_bookmark_name_combo_boxItemStateChanged

  private void back_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_buttonMouseClicked
    // TODO add your handling code here:
    AppHomeForm app_home_form = new AppHomeForm();
    app_home_form.setVisible(true);
    app_home_form.pack();
    app_home_form.setLocationRelativeTo(null);
    app_home_form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_back_buttonMouseClicked

  private void menu_bar_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_bar_logoutMouseClicked
    // TODO add your handling code here:
    LoginForm login_form = new LoginForm();
    login_form.setVisible(true);
    login_form.pack();
    login_form.setLocationRelativeTo(null);
    login_form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_menu_bar_logoutMouseClicked

  private void menu_bar_adminhubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_bar_adminhubMouseClicked
    // TODO add your handling code here:
    AdminHub admin_hub = new AdminHub();
    admin_hub.setVisible(true);
    admin_hub.pack();
    admin_hub.setLocationRelativeTo(null);
    admin_hub.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_menu_bar_adminhubMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookmarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookmarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookmarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookmarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookmarksForm().setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton back_button;
  private javax.swing.JComboBox<String> bookmark_name_combo_box;
  private javax.swing.JComboBox<String> bookmark_type_combo_box;
  private javax.swing.JMenuBar bookmarks_menu_bar;
  private javax.swing.JLabel choose_bookmark_name_label;
  private javax.swing.JLabel choose_bookmark_type_label;
  private javax.swing.JTextPane desc_field;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JMenu menu_bar_adminhub;
  private javax.swing.JMenu menu_bar_logout;
  // End of variables declaration//GEN-END:variables

}
