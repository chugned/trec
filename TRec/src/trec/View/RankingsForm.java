/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trec.View;

import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JRadioButton;
import trec.Controller.UserController;
import trec.Model.Accommodation;
import trec.Model.City;
import trec.Model.Country;
import trec.Model.Destination;
import trec.Model.Helper;

/**
 *
 * @author basic
 */
public class RankingsForm extends javax.swing.JFrame {
  private Helper helper = new Helper();
  /**
   * Creates new form StatisticsForm
   */
  public RankingsForm() {
    initComponents();
    home_menu_bar_adminhub.setVisible(UserController.getInstance().getCurrentUser().isAdmin());
    try {
      ArrayList<Accommodation> list = UserController.getInstance().getAllAccommodations();
      if(list != null) {
        for (Accommodation acc : list) {
          acc.setRanking(UserController.getInstance().getRatingByPlaceID(acc.getID()));
        }
        list = helper.sortAccommodationsAscending(list);
        for(Accommodation acc : list) { 
          place_combo_box.addItem(acc.getName());
        }
        Accommodation first = list.get(0);
        City city = UserController.getInstance().getCityByCityID(first.getCityID());
        city_label.setText(city.getName());
        Country country = UserController.getInstance().getCountryByCountryID(city.getCountryID());
        country_label.setText(country.getName());
        desc_field.setText(first.getDescription());
        double rating = UserController.getInstance().getRatingByPlaceID(first.getID());
        rating_label.setText(String.valueOf(rating));
      }
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    back_button = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    type_combo_box = new javax.swing.JComboBox<>();
    sort_type_combo_box = new javax.swing.JComboBox<>();
    jScrollPane2 = new javax.swing.JScrollPane();
    desc_field = new javax.swing.JTextPane();
    jLabel4 = new javax.swing.JLabel();
    country_label = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    city_label = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    rating_label = new javax.swing.JLabel();
    place_combo_box = new javax.swing.JComboBox<>();
    adminhub_menu_bar = new javax.swing.JMenuBar();
    adminhub_menu_bar_logout = new javax.swing.JMenu();
    home_menu_bar_adminhub = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    back_button.setText("Back");
    back_button.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        back_buttonMouseClicked(evt);
      }
    });
    back_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        back_buttonActionPerformed(evt);
      }
    });

    jLabel1.setText("You are seeing top");

    jLabel2.setText("sorted by rankings in");

    jLabel3.setText("order.");

    type_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "accommodations", "destinations" }));
    type_combo_box.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        type_combo_boxItemStateChanged(evt);
      }
    });

    sort_type_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ascending", "descending" }));
    sort_type_combo_box.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        sort_type_combo_boxItemStateChanged(evt);
      }
    });

    desc_field.setEditable(false);
    jScrollPane2.setViewportView(desc_field);

    jLabel4.setText("Country:");

    country_label.setText("<country>");

    jLabel6.setText("City:");

    city_label.setText("<city>");

    jLabel7.setText("Rating:");

    rating_label.setText("<rating>");

    place_combo_box.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        place_combo_boxItemStateChanged(evt);
      }
    });

    adminhub_menu_bar_logout.setText("Logout");
    adminhub_menu_bar_logout.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        adminhub_menu_bar_logoutMouseClicked(evt);
      }
    });
    adminhub_menu_bar.add(adminhub_menu_bar_logout);

    home_menu_bar_adminhub.setText("AdminHub");
    home_menu_bar_adminhub.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        home_menu_bar_adminhubMouseClicked(evt);
      }
    });
    adminhub_menu_bar.add(home_menu_bar_adminhub);

    setJMenuBar(adminhub_menu_bar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(layout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel4)
              .addComponent(jLabel6)
              .addComponent(jLabel7))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(city_label)
              .addComponent(country_label)
              .addComponent(rating_label)))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(place_combo_box, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(back_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sort_type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel3)
            .addGap(39, 39, 39))
          .addGroup(layout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(17, 17, 17)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(jLabel2)
          .addComponent(jLabel3)
          .addComponent(type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(sort_type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(layout.createSequentialGroup()
            .addComponent(place_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel4)
              .addComponent(country_label))
            .addGap(37, 37, 37)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel6)
              .addComponent(city_label))
            .addGap(38, 38, 38)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(rating_label)
              .addComponent(jLabel7))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(back_button))
          .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void adminhub_menu_bar_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminhub_menu_bar_logoutMouseClicked
    // TODO add your handling code here:
    LoginForm login_form = new LoginForm();
    login_form.setVisible(true);
    login_form.pack();
    login_form.setLocationRelativeTo(null);
    login_form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_adminhub_menu_bar_logoutMouseClicked

  private void home_menu_bar_adminhubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_menu_bar_adminhubMouseClicked
    // TODO add your handling code here:
    AdminHub admin_hub = new AdminHub();
    admin_hub.setVisible(true);
    admin_hub.pack();
    admin_hub.setLocationRelativeTo(null);
    admin_hub.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_home_menu_bar_adminhubMouseClicked

  private void back_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_buttonMouseClicked
    // TODO add your handling code here:
    AppHomeForm form = new AppHomeForm();
    form.setVisible(true);
    form.pack();
    form.setLocationRelativeTo(null);
    form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.dispose();
  }//GEN-LAST:event_back_buttonMouseClicked

  private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_back_buttonActionPerformed

  private void place_combo_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_place_combo_boxItemStateChanged
    // TODO add your handling code here:
    String type = type_combo_box.getSelectedItem().toString();
    try {
      if(type.equals("accommodations")) {
        String name = place_combo_box.getSelectedItem().toString();
        Accommodation acc = UserController.getInstance().getAccommodationByName(name);
        City city = UserController.getInstance().getCityByCityID(acc.getCityID());
        city_label.setText(city.getName());
        Country country = UserController.getInstance().getCountryByCountryID(city.getCountryID());
        country_label.setText(country.getName());
        desc_field.setText(acc.getDescription());
        double rating = UserController.getInstance().getRatingByPlaceID(acc.getID());
        rating_label.setText(String.valueOf(rating));
      } else {
        String name = place_combo_box.getSelectedItem().toString();
        Destination dest = UserController.getInstance().getDestinationByName(name);
        City city = UserController.getInstance().getCityByCityID(dest.getCityID());
        city_label.setText(city.getName());
        Country country = UserController.getInstance().getCountryByCountryID(city.getCountryID());
        country_label.setText(country.getName());
        desc_field.setText(dest.getDescription());
        double rating = UserController.getInstance().getRatingByPlaceID(dest.getID());
        rating_label.setText(String.valueOf(rating));
      }
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }//GEN-LAST:event_place_combo_boxItemStateChanged

  private void type_combo_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_type_combo_boxItemStateChanged
    // TODO add your handling code here:
    place_combo_box.removeAllItems();
    try {
      if(type_combo_box.getSelectedItem().toString().equals("accommodations")) {
        ArrayList<Accommodation> list = UserController.getInstance().getAllAccommodations();
        if(list != null) {
          for (Accommodation acc : list) {
            acc.setRanking(UserController.getInstance().getRatingByPlaceID(acc.getID()));
          }
          if(sort_type_combo_box.getSelectedItem().toString().equals("ascending")) {
            list = helper.sortAccommodationsAscending(list);
          } else {
            list = helper.sortAccommodationsDescending(list);
          }
          for(Accommodation acc : list) { 
            place_combo_box.addItem(acc.getName());
          }
          Accommodation first = list.get(0);
          City city = UserController.getInstance().getCityByCityID(first.getCityID());
          city_label.setText(city.getName());
          Country country = UserController.getInstance().getCountryByCountryID(city.getCountryID());
          country_label.setText(country.getName());
          desc_field.setText(first.getDescription());
          double rating = UserController.getInstance().getRatingByPlaceID(first.getID());
          rating_label.setText(String.valueOf(rating));
        }
      } else {
        ArrayList<Destination> list = UserController.getInstance().getAllDestinations();
        if(list != null) {
          for (Destination dest : list) {
            dest.setRanking(UserController.getInstance().getRatingByPlaceID(dest.getID()));
          }
          if(sort_type_combo_box.getSelectedItem().toString().equals("ascending")) {
            list = helper.sortDestinationsAscending(list);
          } else {
            list = helper.sortDestinationsDescending(list);
          }
          for(Destination dest : list) { 
            place_combo_box.addItem(dest.getName());
          }
          Destination first = list.get(0);
          City city = UserController.getInstance().getCityByCityID(first.getCityID());
          city_label.setText(city.getName());
          Country country = UserController.getInstance().getCountryByCountryID(city.getCountryID());
          country_label.setText(country.getName());
          desc_field.setText(first.getDescription());
          double rating = UserController.getInstance().getRatingByPlaceID(first.getID());
          rating_label.setText(String.valueOf(rating));
        }
      }
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }//GEN-LAST:event_type_combo_boxItemStateChanged

  private void sort_type_combo_boxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sort_type_combo_boxItemStateChanged
    // TODO add your handling code here:
    try {
      type_combo_boxItemStateChanged(null);
    } catch(Exception e) {
      System.out.println(e.getMessage());
    }
  }//GEN-LAST:event_sort_type_combo_boxItemStateChanged

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(RankingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(RankingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(RankingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(RankingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new RankingsForm().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuBar adminhub_menu_bar;
  private javax.swing.JMenu adminhub_menu_bar_logout;
  private javax.swing.JButton back_button;
  private javax.swing.JLabel city_label;
  private javax.swing.JLabel country_label;
  private javax.swing.JTextPane desc_field;
  private javax.swing.JMenu home_menu_bar_adminhub;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JComboBox<String> place_combo_box;
  private javax.swing.JLabel rating_label;
  private javax.swing.JComboBox<String> sort_type_combo_box;
  private javax.swing.JComboBox<String> type_combo_box;
  // End of variables declaration//GEN-END:variables
}
